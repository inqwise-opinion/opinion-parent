name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Verify
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v5
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
        
    - name: Verify Maven configuration
      run: mvn help:effective-settings
      
    - name: Build and install parent POM
      run: mvn clean install
      
    - name: Verify JAR creation
      run: |
        ls -la target/
        echo "✅ Parent POM built successfully"
        
    - name: Generate Javadoc
      run: mvn javadoc:javadoc
      
    - name: Upload build artifacts
      if: matrix.java == '17'
      uses: actions/upload-artifact@v4
      with:
        name: maven-artifacts
        path: |
          target/*.jar
          target/site/apidocs/
        retention-days: 30

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven
        
    - name: Validate Maven project
      run: mvn validate
      
    - name: Check for updates
      run: mvn compile -Pdisplay-updates

  release-check:
    name: Release Readiness
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [build, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven
        
    - name: Check if ready for release
      run: |
        mvn clean package
        mvn source:jar javadoc:jar
        echo "✅ Release artifacts can be generated successfully"
        
    - name: Validate release profile
      run: |
        if mvn help:all-profiles | grep -q "sonatype-oss-release"; then
          echo "✅ Release profile found"
        else
          echo "⚠️ Release profile not found - manual release process required"
        fi
